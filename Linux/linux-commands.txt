##GPU & Display##
	nvidia-smi -> check nvidia gpu details along with cuda version
	lspci | grep -i nvidia -> show available nvidia components
	prime-select query -> show the currently selected gpu profile
	lspci | grep -Ei 'VGA|3D' -> show available GPUs
	lspci -k | grep -A 2 -E "(VGA|3D)" -> show available GPUs with more details
	echo $XDG_SESSION_TYPE -> check which display system is being used

##Fonts##
	# to install fonts just move font files to /usr/local/share/fonts folder with command 'sudo mv (source) (destination)' (This command is also used to rename files)
	sudo fc-cache -fv -> refreshes font cache system wide
	fc-list : family | sort -> lists installed fonts sorted by family

##System##
	# to create system wide bash files move the bash file in /bin folder and remove the extension and make it executable
	chmod +x filename -> makes the file executable
	chmod +rwx filename -> change read/write/execute permission to a file ('+' = give, '-' = block / permission)
	rm filename -> remove a file
	grep -E "opencv|numpy|scikit|pandas|matplotlib" -> search multiple patterns


##Enironment Variables##
	env -> show environment variables and paths
	export var=path:path:path:etc. -> set environment variable (don't forget to mention the previous paths along with new ones with: separated lines, cause this method dosen't add rather reinitializes the path var)
	source ~/.bashrc -> refresh/restart bash terminal session

#dont use fuse for appimages

##Wine##
	WINEPREFIX "destination" winecfg -> create wineprefix in that folder

##Git##
	git config --global credential.helper store -> store git credentials

##Flatpak##
	flatpak list -> list flatpak apps
	flatpak uninstall --unused -> uninstall unused runtimes
	flatpak uninstall --delete-data <application_id> -> uninstall app & delete it's data
	flatpak uninstall --all -> uninstall all flatpak packages
	sudo flatpak update -> update all flatpaks
	sudo flatpak update --app <package_name> -> update flatpaks individually
	
##SHELL##
echo $SHELL #check current shell
command -v zsh #command -v will print the absolute filepath used when invoking the argument provided, in this case zsh. This gives us the path to Zsh's exectuable file.
command -v zsh | sudo tee -a /etc/shells # The tee utility, takes an input and appends it to /etc/shells. The pipe symbol takes the output of the left-hand side and uses it as the input for the right-hand side.
sudo chsh -s $(which zsh) $USER #change default shell. $(which zsh) - The shell we want to use as the default, $USER - The user whose default shell we are changing
sudo usermod -s /bin/zsh  $USER (use this if above command doesn't work)

##Daemons##
systemctl daemon-reload -> reloads the daemons
systemctl list-units --type service -> list all daemons

##Boot##
sudo mkinitcpio -P -> initial ram loading modifications

##Install Packages##
makepkg -si -> install a package from a PKGBUILD along with dependencies (if needed)

##Terminal##
ctrl+l -> clear
ctrl+u -> clear current line
